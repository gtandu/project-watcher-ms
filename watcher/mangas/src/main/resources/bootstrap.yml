server.port: ${MANGAS_SERVICE_SERVER_PORT}
spring:
  datasource:
    url: ${MANGAS_SERVICE_SPRING_DATASOURCE_URL}
    username: ${MANGAS_SERVICE_SPRING_DATASOURCE_USERNAME}
    password: ${MANGAS_SERVICE_SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  devtools:
    livereload:
      port: ${MANGAS_SERVICE_SPRING_DEVTOOLS_LIVERELOAD_PORT}
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: ${COMMON_SERVICE_SPRING_PROFILES_ACTIVE}
  application:
    name: ${MANGAS_SERVICE_SPRING_APPLICATION_NAME}
  cloud:
    config:
      name: ${MANGAS_SERVICE_SPRING_CLOUD_CONFIG_NAME}
      uri: ${COMMON_SERVICE_SPRING_CLOUD_CONFIG_URI}
      username: ${COMMON_SPRING_CLOUD_CONFIG_USERNAME}
      password: ${COMMON_SPRING_CLOUD_CONFIG_PASSWORD}
      fail-fast: ${COMMON_SPRING_CLOUD_CONFIG_FAILFAST}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${COMMON_SERVICE_SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI}
          jwk-set-uri: ${COMMON_SERVICE_SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI}
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${COMMON_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
logging:
  file:
    path: ${MANGAS_SERVICE_LOGGING_FILE_PATH}
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
watcher-api:
  manga:
    baseUrl: /api/v1/mangas
    searchByName: /{searchKey}
    deleteMangaById: /{mangaId}
  readingMedia:
    baseUrl: /api/v1/reading-medias
