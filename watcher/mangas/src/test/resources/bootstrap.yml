server.port: 7001
spring:
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:test
  devtools:
    livereload:
      port: 35701
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: development
  application:
    name: mangas-service
  cloud:
    config:
      name: mangas-service
      uri: http://localhost:8888
      username: ${SPRING_CLOUD_CONFIG_USERNAME}
      password: ${SPRING_CLOUD_CONFIG_PASSWORD}
      fail-fast: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/project-watcher
          jwk-set-uri: http://localhost:8081/realms/project-watcher/protocol/openid-connect/certs
jwt:
  auth:
    converter:
      resource-id: project-watcher-client
      principal-attribute: preferred_username
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
logging:
  file:
    path: logs
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    fr.gtandu.client.user.UserServiceClient: TRACE
watcher-api:
  manga:
    baseUrl: /api/v1/mangas
    searchByName: /{searchKey}
    deleteMangaById: /{mangaId}
  readingManga:
    baseUrl: /api/v1/reading-mangas
manga-dex-api:
  baseUrl: https://api.mangadex.org
  searchCover:
    uri: https://uploads.mangadex.org/covers
  searchTags:
    uri: /manga/tag
  searchManga:
    uri: /manga
    queryParams:
      queryParamNameTitle: title
      queryParamNameLimit: limit
      queryParamValueLimit: 20
      queryParamNameIncludes: "includes[]"
      queryParamValueIncludes:
        - cover_art
      queryParamExcludedTagIDs: "excludedTags[]"
      excludedTagNames:
        - Doujinshi
  searchLimit: 5
